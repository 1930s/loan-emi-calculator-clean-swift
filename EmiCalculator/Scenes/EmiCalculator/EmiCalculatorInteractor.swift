//
//  EmiCalculatorInteractor.swift
//  EmiCalculator
//
//  Created by Tirupati Balan on 11/04/16.
//  Copyright (c) 2016 CelerStudio. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol EmiCalculatorInteractorInput
{
    func doSomething(request: EmiCalculatorRequest)
}

protocol EmiCalculatorInteractorOutput
{
    func presentSomething(response: EmiCalculatorResponse)
}

class EmiCalculatorInteractor: EmiCalculatorInteractorInput
{
    var output: EmiCalculatorInteractorOutput!
    var worker: EmiCalculatorWorker!
    
    // MARK: Business logic
    
    func doSomething(request: EmiCalculatorRequest)
    {
        // NOTE: Create some Worker to do the work
        worker = EmiCalculatorWorker()
        let requestEmiCalculation = request.requestEmiCalculation
        let emi = worker.calculateEmi(Double(requestEmiCalculation.loanAmount), loanTenure: Double(requestEmiCalculation.loanTenure), interestRate: Double(requestEmiCalculation.interestRate))
        let totalPayment = worker.calculateTotalPayment(emi, loanTenure: requestEmiCalculation.loanTenure)
        let totalPayableInterest = worker.calculateTotalInterestPayable(totalPayment, loanAmount: Double(requestEmiCalculation.loanAmount))
        // NOTE: Pass the result to the Presenter
        
        let response = EmiCalculatorResponse.ResponseEmiCalculation(totalPayment : Double(totalPayment), totalPaymentInterest : totalPayableInterest, loanEmi : Double(emi))
        let emiCalculatorResponse = EmiCalculatorResponse(responseEmiCalculation : response)

        output.presentSomething(emiCalculatorResponse)
    }
}
